# Ultralytics YOLO 🚀, AGPL-3.0 许可证
# Argoverse-HD 数据集（环前中心摄像头）https://www.cs.cmu.edu/~mengtial/proj/streaming/ 由 Argo AI 提供
# 文档：https://docs.ultralytics.com/datasets/detect/argoverse/
# 示例用法：yolo train data=Argoverse.yaml
# 父目录
# ├── ultralytics
# └── datasets
#     └── Argoverse  ← 下载到此处 (31.5 GB)

# 训练/验证/测试集可以是 1) 目录：path/to/imgs, 2) 文件：path/to/imgs.txt, 或 3) 列表：[path/to/imgs1, path/to/imgs2, ..]
path: ../datasets/Argoverse # 数据集根目录
train: Argoverse-1.1/images/train/ # 训练图像（相对于 'path'）39384 张图像
val: Argoverse-1.1/images/val/ # 验证图像（相对于 'path'）15062 张图像
test: Argoverse-1.1/images/test/ # 测试图像（可选）https://eval.ai/web/challenges/challenge-page/800/overview

# 类别
names:
  0: person
  1: bicycle
  2: car
  3: motorcycle
  4: bus
  5: truck
  6: traffic_light
  7: stop_sign

# 下载脚本/URL（可选）---------------------------------------------------------------------------------------
download: |
  import json
  from tqdm import tqdm
  from ultralytics.utils.downloads import download
  from pathlib import Path

  def argoverse2yolo(set):
      labels = {}
      a = json.load(open(set, "rb"))
      for annot in tqdm(a['annotations'], desc=f"Converting {set} to YOLOv5 format..."):
          img_id = annot['image_id']
          img_name = a['images'][img_id]['name']
          img_label_name = f'{img_name[:-3]}txt'

          cls = annot['category_id']  # 实例类别ID
          x_center, y_center, width, height = annot['bbox']
          x_center = (x_center + width / 2) / 1920.0  # 偏移和缩放
          y_center = (y_center + height / 2) / 1200.0  # 偏移和缩放
          width /= 1920.0  # 缩放
          height /= 1200.0  # 缩放

          img_dir = set.parents[2] / 'Argoverse-1.1' / 'labels' / a['seq_dirs'][a['images'][annot['image_id']]['sid']]
          if not img_dir.exists():
              img_dir.mkdir(parents=True, exist_ok=True)

          k = str(img_dir / img_label_name)
          if k not in labels:
              labels[k] = []
          labels[k].append(f"{cls} {x_center} {y_center} {width} {height}\n")

      for k in labels:
          with open(k, "w") as f:
              f.writelines(labels[k])


  # 下载 'https://argoverse-hd.s3.us-east-2.amazonaws.com/Argoverse-HD-Full.zip'（已弃用的 S3 链接）
  dir = Path(yaml['path'])  # 数据集根目录
  urls = ['https://drive.google.com/file/d/1st9qW3BeIwQsnR0t8mRpvbsSWIo16ACi/view?usp=drive_link']
  print("\n\n警告：必须手动下载 Argoverse 数据集，自动下载将无法工作。")
  print(f"警告：手动下载 Argoverse 数据集 '{urls[0]}' 到 '{dir}'，然后重新运行您的命令。\n\n")
  # download(urls, dir=dir)

  # 转换
  annotations_dir = 'Argoverse-HD/annotations/'
  (dir / 'Argoverse-1.1' / 'tracking').rename(dir / 'Argoverse-1.1' / 'images')  # 将 'tracking' 重命名为 'images'
  for d in "train.json", "val.json":
      argoverse2yolo(dir / annotations_dir / d)  # 将 Argoverse 注释转换为 YOLO 标签
